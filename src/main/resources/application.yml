spring:
  application:
    name: App
  security:
    oauth2:
      client:
        registration:
          azure:
            client-id: 75ff66ff-9993-4668-ae3d-7ade2e9b4364 # Temporarily hardcode for testing
            client-secret: ${AZURE_CLIENT_SECRET}
            scope:
              - openid
              - offline_access
            redirect-uri: https://grook-production.up.railway.app/login/oauth2/code/azure
            authorization-grant-type: authorization_code
            client-name: Azure B2C
            provider: azure-b2c
        provider:
          azure-b2c:
            authorization-uri: https://hcliamtrainingb2c.b2clogin.com/hcliamtrainingb2c.onmicrosoft.com/B2C_1A_FG_HCL_SIGNUP_SIGNIN/oauth2/v2.0/authorize
            token-uri: https://hcliamtrainingb2c.b2clogin.com/hcliamtrainingb2c.onmicrosoft.com/B2C_1A_FG_HCL_SIGNUP_SIGNIN/oauth2/v2.0/token
            jwk-set-uri: https://hcliamtrainingb2c.b2clogin.com/hcliamtrainingb2c.onmicrosoft.com/B2C_1A_FG_HCL_SIGNUP_SIGNIN/discovery/v2.0/keys
            user-info-uri: https://hcliamtrainingb2c.b2clogin.com/hcliamtrainingb2c.onmicrosoft.com/B2C_1A_FG_HCL_SIGNUP_SIGNIN/openid/userinfo
            user-name-attribute: name
            user-info-authentication-method: header
            client-authentication-method: post

server:
  port: ${PORT:8080}
  forward-headers-strategy: native
  servlet:
    context-path: /

logging:
  level:
    org.springframework.security: DEBUG
    org.springframework.web: DEBUG
    org.springframework.oauth2: DEBUG
    org.springframework.boot.autoconfigure: DEBUG

---
spring:
  config:
    activate:
      on-profile: local
server:
  port: 8080

---
spring:
  config:
    activate:
      on-profile: prod
server:
  port: ${PORT:8080}

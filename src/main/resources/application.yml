spring:
  application:
    name: App
  security:
    oauth2:
      client:
        registration:
          azure:
            client-id: 75ff66ff-9993-4668-ae3d-7ade2e9b4364
            client-secret: ${AZURE_CLIENT_SECRET}
            scope:
              - openid
              - offline_access
              - https://hcliamtrainingb2c.onmicrosoft.com/75ff66ff-9993-4668-ae3d-7ade2e9b4364/user.read
              - profile
              - email
            redirect-uri: https://grook-production.up.railway.app/login/oauth2/code/azure
            authorization-grant-type: authorization_code
            client-name: Azure B2C
            provider: azure-b2c
        provider:
          azure-b2c:
            issuer:https://hcliamtrainingb2c.b2clogin.com/hcliamtrainingb2c.onmicrosoft.com/B2C_1A_FG_HCL_SIGNUP_SIGNIN/v2.0/
            authorization-uri:https://hcliamtrainingb2c.b2clogin.com/hcliamtrainingb2c.onmicrosoft.com/B2C_1A_FG_HCL_SIGNUP_SIGNIN/oauth2/v2.0/authorize
            token-uri:https://hcliamtrainingb2c.b2clogin.com/hcliamtrainingb2c.onmicrosoft.com/B2C_1A_FG_HCL_SIGNUP_SIGNIN/oauth2/v2.0/token
            jwk-set-uri:https://hcliamtrainingb2c.b2clogin.com/hcliamtrainingb2c.onmicrosoft.com/B2C_1A_FG_HCL_SIGNUP_SIGNIN/discovery/v2.0/keys
            user-info-uri:https://hcliamtrainingb2c.b2clogin.com/hcliamtrainingb2c.onmicrosoft.com/B2C_1A_FG_HCL_SIGNUP_SIGNIN/openid/userinfo
            user-name-attribute:name
            user-info-authentication-method:header

server:
  port: ${PORT:8080}
  forward-headers-strategy: native
  servlet:
    context-path: /

# Logging configuration
logging:
  level:
    root: DEBUG
    org.springframework.web: DEBUG
    org.springframework.security: DEBUG
    org.springframework.security.oauth2: DEBUG
    com.Grook.App: DEBUG
  # Configure console output
  pattern:
    console: '[%d{yyyy-MM-dd HH:mm:ss}] [${spring.application.name}] [%thread] %-5level %logger{36} - %msg%n'
  # Ensure logs go to console
  file:
    name: /dev/stdout

---
spring:
  config:
    activate:
      on-profile: local
server:
  port: 8080

---
spring:
  config:
    activate:
      on-profile: prod
server:
  port: ${PORT:8080}
